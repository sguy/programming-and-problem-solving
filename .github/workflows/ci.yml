name: Python CI

on:
  push:
    branches: [ main ] # Adjust if your default branch is different (e.g., master)
  pull_request:
    branches: [ main ] # Adjust if your default branch is different

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"] # Matches target-version in pyproject.toml

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }} # Cache key based on OS, Python version, and pyproject.toml
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install the project along with its development dependencies
        pip install .[dev]

    - name: Run pre-commit checks
      run: |
        pre-commit run --all-files --show-diff-on-failure

    - name: Lint with Ruff
      run: ruff check .

    - name: Check formatting with Black
      run: black --check .

    - name: Test with Pytest
      run: pytest
